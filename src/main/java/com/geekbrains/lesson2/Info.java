package com.geekbrains.lesson2;

/*
в интерфейсе все методы только абстрактные.

в интерфейсе любое поле public static final (глобальная константа).

интерфейсы могут быть вообще без методов (маркерные интерфейсы).

интерфейс описывает контракт. поддержка классом интерфейса гарантирует,
 		  что все объекты класса умеют что-то делать, что позволяет объединять
 		  объекты разных (далеких) классов на основе общего функционала.

нельзя создать объект интерфейса. 

наследовать ENUM нельзя.

объект внутреннего класса НЕ может жить и работать без объекта внешнего класса.
 	   у него всегда есть привязка к внешнему классу.
 	   поэтому он может обращаться к переменным и методам внешнего класса.

объект внешнего класса может жить и работать без объекта внутреннего класса.
	   у него может не быть привязки к внутреннему классу.
	   поэтому он НЕ может обращаться к переменным и методам внутреннего класса.
	   
если объявить внутренний класс как static, то он становится вложенным классом и
	 теряет доступ к полям и методом внешнего класса, при этом объекты вложенного
	 класса можно будет создавать без привязки к объекту внешнего класса. 

функциональный интерфейс (имеющий только 1 метод) можно свернуть с помощью лямбда-выражения,
			   например new Thread(() -> System.out.println(1)).start();

лямбда-выражение создает объект и в него заворачивает реализацию метода, чтобы прокинуть метод по ссылке. 
 */

public class Info {

}
